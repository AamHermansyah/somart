// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           Int            @id @default(autoincrement())
  title        String
  description  String         @db.Text
  price        Float
  quantity     String
  stock        Int
  category     String
  image        String         @db.Text
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Checkout     Checkout[]
  OrderProduct OrderProduct[]
}

enum Role {
  USER
  ADMIN
}

model User {
  id             Int        @id @default(autoincrement())
  name           String
  email          String     @unique
  password       String
  purchaseAmount Int
  totalPrice     Float
  role           Role       @default(USER)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  Checkout       Checkout[]
  Order          Order[]
}

model Checkout {
  id         Int     @id @default(autoincrement())
  idProduct  Int
  idUser     Int
  amount     Int
  totalPrice Float
  Product    Product @relation(fields: [idProduct], references: [id])
  User       User    @relation(fields: [idUser], references: [id])
}

model Order {
  id          Int            @id @default(autoincrement())
  idUser      Int
  name        String
  phone       String
  email       String
  codeZip     String
  address     String
  deliveryFee Float
  taxFee      Float
  totalPrice  Float
  status      String
  createdAt   DateTime       @default(now())
  User        User           @relation(fields: [idUser], references: [id])
  products    OrderProduct[]
}

model OrderProduct {
  id         Int     @id @default(autoincrement())
  idOrder    Int
  idProduct  Int
  amount     Int
  totalPrice Float
  Order      Order   @relation(fields: [idOrder], references: [id])
  Product    Product @relation(fields: [idProduct], references: [id])
}
